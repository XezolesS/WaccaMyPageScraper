<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Achieve" xml:space="preserve">
    <value>달성도</value>
  </data>
  <data name="AchieveIcon" xml:space="preserve">
    <value>달성도 아이콘</value>
  </data>
  <data name="Achieve_AllMarvelous" xml:space="preserve">
    <value>ALL Marvelous!</value>
  </data>
  <data name="Achieve_Clear" xml:space="preserve">
    <value>클리어</value>
  </data>
  <data name="Achieve_FullCombo" xml:space="preserve">
    <value>Full Combo!</value>
  </data>
  <data name="Achieve_Missless" xml:space="preserve">
    <value>Missless</value>
  </data>
  <data name="Achieve_NoAchieve" xml:space="preserve">
    <value>플레이 하지 않았거나 클리어 하지 못함</value>
  </data>
  <data name="AimeId" xml:space="preserve">
    <value>Aime ID</value>
  </data>
  <data name="Artist" xml:space="preserve">
    <value>아티스트</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>기본</value>
  </data>
  <data name="Genre" xml:space="preserve">
    <value>장르</value>
  </data>
  <data name="Genre_AnimePop" xml:space="preserve">
    <value>애니/팝</value>
  </data>
  <data name="Genre_Original" xml:space="preserve">
    <value>오리지널</value>
  </data>
  <data name="Genre_TanoC" xml:space="preserve">
    <value>HARDCORE TANO*C</value>
  </data>
  <data name="Genre_Touhou" xml:space="preserve">
    <value>동방 어레인지</value>
  </data>
  <data name="Genre_TwoPointFive" xml:space="preserve">
    <value>2.5 차원</value>
  </data>
  <data name="Genre_Variety" xml:space="preserve">
    <value>버라이어티</value>
  </data>
  <data name="Genre_Vocaloid" xml:space="preserve">
    <value>보컬로이드</value>
  </data>
  <data name="Level" xml:space="preserve">
    <value>레벨</value>
  </data>
  <data name="Music" xml:space="preserve">
    <value>악곡</value>
  </data>
  <data name="MusicImage" xml:space="preserve">
    <value>악곡 자켓 이미지</value>
  </data>
  <data name="MusicMetadata" xml:space="preserve">
    <value>악곡 메타데이터</value>
  </data>
  <data name="MusicRanking" xml:space="preserve">
    <value>악곡 랭킹</value>
  </data>
  <data name="PlayCount" xml:space="preserve">
    <value>플레이 횟수</value>
  </data>
  <data name="PlayCountCoop" xml:space="preserve">
    <value>플레이 횟수 (co-op)</value>
  </data>
  <data name="PlayCountVersus" xml:space="preserve">
    <value>플레이 횟수 (vs)</value>
  </data>
  <data name="Player" xml:space="preserve">
    <value>플레이어</value>
  </data>
  <data name="PlayerIcon" xml:space="preserve">
    <value>플레이어 아이콘</value>
  </data>
  <data name="PlayerName" xml:space="preserve">
    <value>플레이어 이름</value>
  </data>
  <data name="PlayerRate" xml:space="preserve">
    <value>플레이어 레이팅</value>
  </data>
  <data name="Rate" xml:space="preserve">
    <value>등급</value>
  </data>
  <data name="RateIcon" xml:space="preserve">
    <value>등급 아이콘</value>
  </data>
  <data name="Rate_A" xml:space="preserve">
    <value>A</value>
  </data>
  <data name="Rate_AA" xml:space="preserve">
    <value>AA</value>
  </data>
  <data name="Rate_AAA" xml:space="preserve">
    <value>AAA</value>
  </data>
  <data name="Rate_B" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="Rate_C" xml:space="preserve">
    <value>C</value>
  </data>
  <data name="Rate_D" xml:space="preserve">
    <value>D</value>
  </data>
  <data name="Rate_Master" xml:space="preserve">
    <value>Master</value>
  </data>
  <data name="Rate_No" xml:space="preserve">
    <value />
  </data>
  <data name="Rate_S" xml:space="preserve">
    <value>S</value>
  </data>
  <data name="Rate_SS" xml:space="preserve">
    <value>SS</value>
  </data>
  <data name="Rate_SSS" xml:space="preserve">
    <value>SSS</value>
  </data>
  <data name="Rate_SSS_Plus" xml:space="preserve">
    <value>SSS+</value>
  </data>
  <data name="Rate_SS_Plus" xml:space="preserve">
    <value>SS+</value>
  </data>
  <data name="Rate_S_Plus" xml:space="preserve">
    <value>S+</value>
  </data>
  <data name="Record" xml:space="preserve">
    <value>기록</value>
  </data>
  <data name="Score" xml:space="preserve">
    <value>점수</value>
  </data>
  <data name="Season" xml:space="preserve">
    <value>시즌</value>
  </data>
  <data name="Stage" xml:space="preserve">
    <value>스테이지</value>
  </data>
  <data name="StageIcon" xml:space="preserve">
    <value>스테이지 아이콘</value>
  </data>
  <data name="StageMetadata" xml:space="preserve">
    <value>스테이지 메타데이터</value>
  </data>
  <data name="StageRanking" xml:space="preserve">
    <value>스테이지 랭킹</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>제목</value>
  </data>
  <data name="TotalRpEarned" xml:space="preserve">
    <value>획득한 RP</value>
  </data>
  <data name="TotalRpRanking" xml:space="preserve">
    <value>획득한 RP 랭킹</value>
  </data>
  <data name="TotalRpSpent" xml:space="preserve">
    <value>소비한 RP</value>
  </data>
  <data name="TotalScore" xml:space="preserve">
    <value>총합 점수</value>
  </data>
  <data name="TotalScoreRanking" xml:space="preserve">
    <value>총합 점수 랭킹</value>
  </data>
  <data name="Trophy" xml:space="preserve">
    <value>트로피</value>
  </data>
  <data name="TrophyIcon" xml:space="preserve">
    <value>트로피 아이콘</value>
  </data>
</root>